<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer_UP</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>WeaponCount = 0 ;
SelectedWeaponIndex = 0;
Power = 5;
PowerMax = 50;
image_speed = 0;
WalkSpeed = 4 / room_speed;
ResetShunts();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MySpeed = 200/room_speed;
speed = 0

// MOVEMENT
if keyboard_check(ord('Z')) 
{
    vspeed = -MySpeed;
    image_speed = WalkSpeed ;
    sprite_index = sPlayer_UP;
}
if keyboard_check(ord('Q'))  
{
    hspeed = -MySpeed;
    image_speed = WalkSpeed ;
    sprite_index = sPlayer_LEFT;
}
if keyboard_check(ord('D'))
{
    hspeed = MySpeed;
    image_speed = WalkSpeed ;
    sprite_index = sPlayer_RIGHT;
}
if keyboard_check(ord('S')) 
{
    vspeed = MySpeed;
    image_speed = WalkSpeed ;
    sprite_index = sPlayer_DOWN;
}
if keyboard_check(vk_space)and !place_meeting (mouse_x, mouse_y, oSolid)
{
    x = mouse_x;
    y = mouse_y;
}
if keyboard_check(vk_nokey)
{
    image_speed = 0;
    image_index = 0;
}

// Facing
//image_angle = point_direction(x,y,mouse_x,mouse_y);

//Powering up 
if Power &lt;PowerMax {
    PowerUpCollected = instance_place(x,y,oPowerUp);
    if instance_exists (PowerUpCollected)
    {
        with PowerUpCollected {instance_destroy()}
        audio_play_sound(aPowerUp,1,false);
        Power +=1 ;
    }
}
// Stay inside the room
if x &lt;= 0 { x=0 }
if y &lt;= 0 { y=0 }
if x &gt;= room_width { x=room_width }
if y &gt;= room_height { y=room_height }

//Kickbakc effect
hspeed =  hspeed+ShuntX;
vspeed =  vspeed+ShuntY;

ResetShunts()

//Don't  bypass blocks
//if place_meeting (x+ hspeed, y + vspeed, oSolid){
    //always keep as much as hspeed as possible
//    OldHspeed = hspeed ;
//    hspeed = 0
//    while 
//        place_meeting(x+hspeed+sign(OldHspeed),y, oSolid)=false //check if there is still room if we crept a bit closer to our old speed
//        &amp;&amp; abs(hspeed) &lt; abs(OldHspeed) //check we haven't restored all of our old speed
//        {
//            //creep towards old speed
//            hspeed = hspeed + sign(OldHspeed);
//        }
//        
//    //always keep as much as vspeed as possible
//    OldVspeed = vspeed ;
//    vspeed = 0
//    while 
//        place_meeting(x+hspeed,y+vspeed+sign(OldVspeed), oSolid)=false //check if there is still room if we crept a bit closer to our old speed
//        &amp;&amp; abs(vspeed) &lt; abs(OldVspeed) //check we haven't restored all of our old speed
//        {
//            //creep towards old speed
//            vspeed = vspeed + sign(OldVspeed);
//        }    
//}

//WEAPON SWITCH

if mouse_check_button_pressed(mb_right) {
    //switch to next weapon
    SelectedWeaponIndex +=1;
    //loop back to the first weapon
    if SelectedWeaponIndex &gt;= WeaponCount {SelectedWeaponIndex =0}
}

//Killed
Incoming = instance_place(x,y,oEnemy);

if instance_exists(Incoming)
{
    ScreenShake(50);
    ExplodeIntoChunks(oGame.NumberOfPlayerBits,oPlayerChunk);    

}

//Game Seve and load
if keyboard_check_pressed(vk_f5){
    SavePlayerData();
}
if keyboard_check_pressed(vk_f6){
    LoadPlayerData();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
