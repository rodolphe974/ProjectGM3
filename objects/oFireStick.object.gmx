<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stick_boundary</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oStick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update analog stick

if (device_mouse_check_button(0,mb_left)) { 
    isPressed = true; 
    
    // update GUI mouse coords only if mouse is pressed
    guiMouseX = device_mouse_x_to_gui(0); 
    guiMouseY = device_mouse_y_to_gui(0); 
}
else { 
    isPressed = false; 
}

// update stick coords
if (isPressed) { 
    if (point_distance(guiX,guiY,guiMouseX,guiMouseY) &lt;= radius*image_xscale) {
        stickX = guiMouseX; 
        stickY = guiMouseY;
    }
    else { // constrain stick to boundary
        var dir = point_direction(guiX,guiY,guiMouseX,guiMouseY); 
        stickX = guiX + lengthdir_x(radius*image_xscale,dir); 
        stickY = guiY + lengthdir_y(radius*image_xscale,dir); 
    }
}
else { 
    // snap back to origin
    if (point_distance(stickX,stickY,guiX,guiY) &gt;= snapRate*image_xscale) {
        var dir = point_direction(stickX,stickY,guiX,guiY); 
        stickX += lengthdir_x(snapRate*image_xscale,dir); 
        stickY += lengthdir_y(snapRate*image_xscale,dir); 
    }
    else { // prevents overshooting
        stickX = guiX; 
        stickY = guiY; 
    }       
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the stick

draw_sprite_ext(boundSprite,0,guiX,guiY,image_xscale,image_yscale,0,c_white,alpha); 

// stick
draw_sprite_ext(stickSprite,0,stickX,stickY,image_xscale,image_yscale,0,c_white,alpha); 


// debug

var axisx = scr_get_analog_stick_axis(self,axis.X); 
var axisy = scr_get_analog_stick_axis(self,axis.Y); 

draw_text(32,32,"x: "+string(axisx)+"#y: "+string(axisy)); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// override draw_self() so that only GUI renders
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
