<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sExplodingFire</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Some AI stuff
if State = "Idle"{
    //wander around aimlessly and may attention to player coming close
    sprite_index = sExplodingFire;
    // Iddle Facing and speed
    image_angle = direction ;
    speed = OriginalSpeed ;
    if ICanSee(oPlayer) {
        State = "Alert";
    }
}else if State = "Alert"{
    // rush to the player
    sprite_index = sExplodingFireAlert;
    if ICanSee(oPlayer) {
        //Go toward him
        direction = point_direction(x,y,oPlayer.x,oPlayer.y);
        if speed &lt; oPlayer.speed + 1/room_speed {
            speed +=1/room_speed;
        }
    }else{
        State = "Idle";
    }
}

// Bouncing
BounceOfWall()

// Burn the beetle
IncomingBeetle = instance_place(x,y,oPlayer);
if instance_exists(IncomingBeetle)
{
     //Grow ourself
    image_xscale = image_xscale * 1.2;
    image_yscale = image_xscale;
    
    //Slowdown because we are bigger
    hspeed = hspeed*0.2;
    vspeed = vspeed*0.2;
}
//Shunt du to being hit by something
hspeed = hspeed + ShuntX;
vspeed = vspeed + ShuntY;
ResetShunts();

// Damage
if HitByProjectile()
{
    ExplodeIntoChunks(12,oFireChunk);
    ScreenShake(25);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
